# ██╗██████╗ ██╗    ██╗███╗   ███╗
# ██║╚════██╗██║    ██║████╗ ████║
# ██║ █████╔╝██║ █╗ ██║██╔████╔██║
# ██║ ╚═══██╗██║███╗██║██║╚██╔╝██║
# ██║██████╔╝╚███╔███╔╝██║ ╚═╝ ██║
# ╚═╝╚═════╝  ╚══╝╚══╝ ╚═╝     ╚═╝

set $mod Mod1


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# This is a very usefull script whic starts the terminal. I have a keyboard 
# shortcut (mod+enter) which runs this script. What this script does is that 
# if the currect workspace is empty, then it will open the terminal
# as floating enabled. If there is a window in the current workspace, then the 
# terminal will open like other windows
# bindsym $mod+Return exec --no-startup-id python ~/scripts/term.py

# kill focused window
bindsym $mod+q kill

# start rofi (a program launcher)
bindsym $mod+d exec rofi -show drun

# change focus

bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+oslash focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+oslash move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# run work screen layout using xrandr script
bindsym $mod+Shift+s exec /home/harrison/work.sh

# find id of window
#bindsym $mod+Shift+o exec xprop

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# assign each of 3 monitors 2 workspaces
workspace 1 output eDP-1
workspace 2 output DP-1-1
workspace 3 output DP-1-2
workspace 4 output eDP-1
workspace 5 output DP-1-1
workspace 6 output DP-1-2

# push windows to their respective workspaces
assign [class="spotify$"] 2

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

#cycle wallpaper
bindsym $mod+Shift+w exec ~/scripts/background.sh

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 2 px or 2 ppt
        bindsym k resize grow height 2 px or 2 ppt
        bindsym l resize shrink height 2 px or 2 ppt
        bindsym oslash resize grow width 2 px or 2 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# Uncomment this to enable i3bar
#bar {
#        status_command i3status
#        position top
#        font Hack 
#
#}

# the pixles of the gaps
gaps inner 18

# gives a5border to the windows. 
for_window [class="^.*"] border pixel 1

# pop ups are floating
#for_window [window_role="pop-up"] floating enable

# task dialogs are floating
#for_window [window_role="task_dialog"] floating enable

# i like having the image viewer floating
for_window [class="Viewnior"] floating enable

# Video player floating. This video player is used for quick
# playing. But I use VLC for movies or something similar.
for_window [class="mpv"] floating enable
for_window [class="SimpleScreenRecorder"] floating enable

for_window [class="Keybase"] floating enable

# color of the borders
set_from_resource $c0 i3wm.color0 #f0f0f0
 set_from_resource $c1 i3wm.color1 #f0f0f0
 set_from_resource $c2 i3wm.color2 #f0f0f0
 set_from_resource $c3 i3wm.color3 #f0f0f0
 set_from_resource $c4 i3wm.color4 #f0f0f0
 set_from_resource $c5 i3wm.color5 #f0f0f0
 set_from_resource $c6 i3wm.color6 #f0f0f0
 set_from_resource $c7 i3wm.color7 #f0f0f0
 set_from_resource $c8 i3wm.color8 #f0f0f0
 set_from_resource $c9 i3wm.color9 #f0f0f0
 set_from_resource $c10 i3wm.color10 #f0f0f0
 set_from_resource $c11 i3wm.color11 #f0f0f0
 set_from_resource $c12 i3wm.color12 #f0f0f0
 set_from_resource $c13 i3wm.color13 #f0f0f0
 set_from_resource $c14 i3wm.color14 #f0f0f0
 set_from_resource $c15 i3wm.color15 #f0f0f0

 # class                 border  backgr. text indicator child_border
 client.focused          $c7     $c7     $c0  $c7       $c7
 client.focused_inactive $c2     $c2     $c7  $c2       $c2
 client.unfocused        $c2     $c2     $c7  $c2       $c2
 client.urgent           $c4     $c4     $c0  $c2       $c2
 client.placeholder      $c15     $c2     $c7  $c2       $c2

 client.background       $c0

# mouse, please stop focus whenever you hover to whatever windows plz :(
focus_follows_mouse no

# fixes graphics glitch
new_window none

####################
## Run on startup ##
####################

# exec -> On start-up
# exec_always -> On start-up and reload

exec --no-startup-id ~/.config/i3/startup

# Automaticaly sets wallpaper. Just the the wallpaper
# you want in the Wallpapers directory then it will 
# automaticaly set it on start up.
# exec_always --no-startup-id feh --bg-scale ~/Pictures/Wallpaper/*
# exec --no-startup-id ~/scripts/background.sh

exec --no-startup-id ~/scripts/background.sh

# auto work monitor set-up
exec /home/harrison/work.sh   

# allows sound
exec_always --no-startup-id start-pulseaudio-x11

# notification when i pull the charging plug out and put it in
# exec_always --no-startup-id python3 ~/scripts/chargestatus.py

# load nm-applet on startup
exec_always --no-startup-id nm-applet

# nice window effects and some shadow
exec --no-startup-id compton --config ~/.config/compton.conf

# my eyes love the brightness set to 5%
exec_always --no-startup-id xbacklight -set 5

# i like music
exec --no-startup-id mpd

# set wallpaper for betterlockscreen
exec_always betterlockscreen -u (cat ~/scripts/last)

# spotify on start up
#exec --no-startup-id spotify

exec i3-msg 'workspace 1; exec termite; workspace 1;'
exec i3-msg 'workspace 4; exec spotify;'
exec i3-msg 'workspace 2; exec code;'
exec i3-msg 'workspace 3; exec firefox;' 

#start polybar
exec_always --no-startup-id bash ~/.config/polybar/launch.sh

##################
## Key bindings ##
##################

# pulse Audio controls
# I have set it so that it if the volume is set to mute, and I try to increase or decrease
# the volume, it will unmute and then increase or decrease. Because before, it would stay mute
# and just increase the volume but it would still stay mute. Yes, its strange.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-mute 0 0 && pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-mute 0 0 && pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# change brightness using xbacklight
# check the link below to fix brightness on MacBooks
# https://medium.com/@philpl/ubuntu-14-10-running-on-my-macbook-18991a697ae0
bindsym XF86MonBrightnessUp exec xbacklight -inc 5
bindsym XF86MonBrightnessDown exec xbacklight -dec 5

# starts the  betterlockscreen lockscreen
bindsym $mod+Shift+x exec --no-startup-id betterlockscreen -s
bindsym $mod+x exec --no-startup-id i3lock 

# screenshot fullscreen
bindsym $mod+p exec ~/scripts/screenshot.sh

# screenshot selected area
# You need to use `--release` in the binding.
# See "4.3. Keyboard bindings" on i3wm docs 
#bindsym $mod+o --release exec bash ~/scripts/screenshot.sh -s

# a very cool emoji and unicode character picker using rofi
bindsym $mod+Shift+d exec ~/.config/rofi/scripts/picker.sh

# open up my file manager
#bindsym $mod+Shift+Return exec ranger
